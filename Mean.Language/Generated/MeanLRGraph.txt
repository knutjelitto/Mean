
State 0:
	Contexts:
	Transitions:
		On expression shift to 1
		On withBlockExpression shift to 2
		On withoutBlockExpression shift to 3
		On { shift to 4
		On orExpression shift to 5
		On andExpression shift to 6
		On bitOrExpression shift to 7
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[__VAxiom -> * expression $ ][ ε]
		[expression -> * withBlockExpression ][ $]
		[expression -> * withoutBlockExpression ][ $]
		[withBlockExpression -> * { expression } ][ $]
		[withoutBlockExpression -> * orExpression ][ $]
		[orExpression -> * orExpression || andExpression ][ $ ||]
		[orExpression -> * andExpression ][ $ ||]
		[andExpression -> * andExpression && bitOrExpression ][ $ && ||]
		[andExpression -> * bitOrExpression ][ $ && ||]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ $ | && ||]
		[bitOrExpression -> * bitXorExpression ][ $ | && ||]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ $ ^ | && ||]
		[bitXorExpression -> * bitAndExpression ][ $ ^ | && ||]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ $ & ^ | && ||]
		[bitAndExpression -> * equalityExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression == shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression != shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ $ & ^ | && ||]
		[equalityExpression -> * shiftExpression ][ $ & ^ | && ||]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ < > shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ < > shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * addExpression ][ $ < > shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression + mulExpression ][ $ < > - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression - mulExpression ][ $ < > - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * mulExpression ][ $ < > - + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < > - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < > - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < > - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < > - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * unaryExpression ][ $ < > - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * - postfixExpression ][ $ < > - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * ! postfixExpression ][ $ < > - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * postfixExpression ][ $ < > - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . name ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * primaryExpression ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * literal ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * ( expression ) ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * name ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * numberLiteral ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * boolLiteral ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier genericArgs ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * integerLiteral ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * floatLiteral ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[boolLiteral -> * BOOL_LITERAL ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[identifier -> * IDENTIFIER ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
	Conflicts:

State 1:
	Contexts:
	Transitions:
		On $ shift to 31
	Items:
		[__VAxiom -> expression * $ ][ ε]
	Conflicts:

State 2:
	Contexts:
	Transitions:
	Items:
		[expression -> withBlockExpression * ][ $ , ) ] }]
	Conflicts:

State 3:
	Contexts:
	Transitions:
	Items:
		[expression -> withoutBlockExpression * ][ $ , ) ] }]
	Conflicts:

State 4:
	Contexts:
	Transitions:
		On expression shift to 32
		On withBlockExpression shift to 2
		On withoutBlockExpression shift to 3
		On { shift to 4
		On orExpression shift to 5
		On andExpression shift to 6
		On bitOrExpression shift to 7
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[withBlockExpression -> { * expression } ][ $ , ) ] }]
		[expression -> * withBlockExpression ][ }]
		[expression -> * withoutBlockExpression ][ }]
		[withBlockExpression -> * { expression } ][ }]
		[withoutBlockExpression -> * orExpression ][ }]
		[orExpression -> * orExpression || andExpression ][ || }]
		[orExpression -> * andExpression ][ || }]
		[andExpression -> * andExpression && bitOrExpression ][ && || }]
		[andExpression -> * bitOrExpression ][ && || }]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ | && || }]
		[bitOrExpression -> * bitXorExpression ][ | && || }]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ ^ | && || }]
		[bitXorExpression -> * bitAndExpression ][ ^ | && || }]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ & ^ | && || }]
		[bitAndExpression -> * equalityExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression == shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression != shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ & ^ | && || }]
		[equalityExpression -> * shiftExpression ][ & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ < > shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ < > shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * addExpression ][ < > shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ < > - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ < > - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * mulExpression ][ < > - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ < > - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ < > - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ < > - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ < > - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ < > - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ < > - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ < > - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ < > - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ < > ( [ . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 5:
	Contexts:
	Transitions:
		On || shift to 33
	Items:
		[withoutBlockExpression -> orExpression * ][ $ , ) ] }]
		[orExpression -> orExpression * || andExpression ][ $ , ) ] || }]
	Conflicts:

State 6:
	Contexts:
	Transitions:
		On && shift to 34
	Items:
		[orExpression -> andExpression * ][ $ , ) ] || }]
		[andExpression -> andExpression * && bitOrExpression ][ $ , ) ] && || }]
	Conflicts:

State 7:
	Contexts:
	Transitions:
		On | shift to 35
	Items:
		[andExpression -> bitOrExpression * ][ $ , ) ] && || }]
		[bitOrExpression -> bitOrExpression * | bitXorExpression ][ $ , ) ] | && || }]
	Conflicts:

State 8:
	Contexts:
	Transitions:
		On ^ shift to 36
	Items:
		[bitOrExpression -> bitXorExpression * ][ $ , ) ] | && || }]
		[bitXorExpression -> bitXorExpression * ^ bitAndExpression ][ $ , ) ] ^ | && || }]
	Conflicts:

State 9:
	Contexts:
	Transitions:
		On & shift to 37
	Items:
		[bitXorExpression -> bitAndExpression * ][ $ , ) ] ^ | && || }]
		[bitAndExpression -> bitAndExpression * & equalityExpression ][ $ , ) ] & ^ | && || }]
	Conflicts:

State 10:
	Contexts:
	Transitions:
	Items:
		[bitAndExpression -> equalityExpression * ][ $ , ) ] & ^ | && || }]
	Conflicts:

State 11:
	Contexts:
	Transitions:
		On == shift to 38
		On != shift to 39
		On < shift to 40
		On <= shift to 41
		On > shift to 42
		On >= shift to 43
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression * == shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * != shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * < shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * < shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * <= shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * <= shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * > shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * > shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * >= shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * >= shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 12:
	Contexts:
	Transitions:
		On + shift to 46
		On - shift to 47
	Items:
		[shiftExpression -> addExpression * ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> addExpression * + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> addExpression * - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 13:
	Contexts:
	Transitions:
		On * shift to 48
		On / shift to 49
		On % shift to 50
		On mod shift to 51
	Items:
		[addExpression -> mulExpression * ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 14:
	Contexts:
	Transitions:
	Items:
		[mulExpression -> unaryExpression * ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 15:
	Contexts:
	Transitions:
		On postfixExpression shift to 52
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[unaryExpression -> - * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 16:
	Contexts:
	Transitions:
		On postfixExpression shift to 53
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[unaryExpression -> ! * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 17:
	Contexts:
	Transitions:
		On ( shift to 54
		On [ shift to 55
		On . shift to 56
	Items:
		[unaryExpression -> postfixExpression * ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 18:
	Contexts:
	Transitions:
	Items:
		[postfixExpression -> primaryExpression * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 19:
	Contexts:
	Transitions:
	Items:
		[primaryExpression -> literal * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 20:
	Contexts:
	Transitions:
		On expression shift to 57
		On withBlockExpression shift to 2
		On withoutBlockExpression shift to 3
		On { shift to 4
		On orExpression shift to 5
		On andExpression shift to 6
		On bitOrExpression shift to 7
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[primaryExpression -> ( * expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[expression -> * withBlockExpression ][ )]
		[expression -> * withoutBlockExpression ][ )]
		[withBlockExpression -> * { expression } ][ )]
		[withoutBlockExpression -> * orExpression ][ )]
		[orExpression -> * orExpression || andExpression ][ ) ||]
		[orExpression -> * andExpression ][ ) ||]
		[andExpression -> * andExpression && bitOrExpression ][ ) && ||]
		[andExpression -> * bitOrExpression ][ ) && ||]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ ) | && ||]
		[bitOrExpression -> * bitXorExpression ][ ) | && ||]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ ) ^ | && ||]
		[bitXorExpression -> * bitAndExpression ][ ) ^ | && ||]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ ) & ^ | && ||]
		[bitAndExpression -> * equalityExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression == shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression != shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ ) & ^ | && ||]
		[equalityExpression -> * shiftExpression ][ ) & ^ | && ||]
		[shiftExpression -> * shiftExpression shl addExpression ][ < > ) shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * shiftExpression shr addExpression ][ < > ) shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * addExpression ][ < > ) shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression + mulExpression ][ < > ) - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression - mulExpression ][ < > ) - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * mulExpression ][ < > ) - + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression * unaryExpression ][ < > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression / unaryExpression ][ < > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression % unaryExpression ][ < > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression mod unaryExpression ][ < > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * unaryExpression ][ < > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * - postfixExpression ][ < > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * ! postfixExpression ][ < > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * postfixExpression ][ < > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression [ expression ] ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . integerLiteral ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . name ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * primaryExpression ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * literal ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * ( expression ) ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * name ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * numberLiteral ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * boolLiteral ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier genericArgs ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * integerLiteral ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * floatLiteral ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[boolLiteral -> * BOOL_LITERAL ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[identifier -> * IDENTIFIER ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[integerLiteral -> * INTEGER_LITERAL ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[floatLiteral -> * FLOAT_LITERAL ][ < > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
	Conflicts:

State 21:
	Contexts:
	Transitions:
	Items:
		[primaryExpression -> name * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 22:
	Contexts:
	Transitions:
	Items:
		[literal -> numberLiteral * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 23:
	Contexts:
	Transitions:
	Items:
		[literal -> boolLiteral * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 24:
	Contexts:
	Transitions:
		On genericArgs shift to 58
		On < shift to 59
	Items:
		[name -> identifier * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> identifier * genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgs -> * < genericArgsTypes > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgs -> * < genericArgsTypes , > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgs -> * < genericArgsTypes genericArgsBindings > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:
		Conflict ConflictShiftReduce on <:
			Items:
				[genericArgs -> * < genericArgsTypes >]
				[genericArgs -> * < genericArgsTypes , >]
				[genericArgs -> * < genericArgsTypes genericArgsBindings >]
				[name -> identifier *]
			Examples:
				〖IDENTIFIER <〗
				〖{ IDENTIFIER <〗
				〖- IDENTIFIER <〗
				〖! IDENTIFIER <〗
				〖( IDENTIFIER <〗
				〖|| && | ^ & shl + * - ( ) == shl + * - ( ) || IDENTIFIER <〗
				〖&& | ^ & shl + * - ( ) == shl + * - ( ) && IDENTIFIER <〗
				〖| ^ & shl + * - ( ) == shl + * - ( ) | IDENTIFIER <〗
				〖^ & shl + * - ( ) == shl + * - ( ) ^ IDENTIFIER <〗
				〖& shl + * - ( ) == shl + * - ( ) & IDENTIFIER <〗
				〖shr shl + * - ( ) == IDENTIFIER <〗
				〖- + * - ( ) + IDENTIFIER <〗
				〖/ * - ( ) * IDENTIFIER <〗
				〖[ { } ] ( ) ( IDENTIFIER <〗

State 25:
	Contexts:
	Transitions:
	Items:
		[numberLiteral -> integerLiteral * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 26:
	Contexts:
	Transitions:
	Items:
		[numberLiteral -> floatLiteral * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 27:
	Contexts:
	Transitions:
	Items:
		[boolLiteral -> BOOL_LITERAL * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 28:
	Contexts:
	Transitions:
	Items:
		[identifier -> IDENTIFIER * ][ $ < , > = ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 29:
	Contexts:
	Transitions:
	Items:
		[integerLiteral -> INTEGER_LITERAL * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 30:
	Contexts:
	Transitions:
	Items:
		[floatLiteral -> FLOAT_LITERAL * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 31:
	Contexts:
	Transitions:
	Items:
		[__VAxiom -> expression $ * ][ ε]
	Conflicts:

State 32:
	Contexts:
	Transitions:
		On } shift to 60
	Items:
		[withBlockExpression -> { expression * } ][ $ , ) ] }]
	Conflicts:

State 33:
	Contexts:
	Transitions:
		On andExpression shift to 61
		On bitOrExpression shift to 7
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[orExpression -> orExpression || * andExpression ][ $ , ) ] || }]
		[andExpression -> * andExpression && bitOrExpression ][ $ , ) ] && || }]
		[andExpression -> * bitOrExpression ][ $ , ) ] && || }]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ $ , ) ] | && || }]
		[bitOrExpression -> * bitXorExpression ][ $ , ) ] | && || }]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ $ , ) ] ^ | && || }]
		[bitXorExpression -> * bitAndExpression ][ $ , ) ] ^ | && || }]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ $ , ) ] & ^ | && || }]
		[bitAndExpression -> * equalityExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression == shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression != shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 34:
	Contexts:
	Transitions:
		On bitOrExpression shift to 62
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[andExpression -> andExpression && * bitOrExpression ][ $ , ) ] && || }]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ $ , ) ] | && || }]
		[bitOrExpression -> * bitXorExpression ][ $ , ) ] | && || }]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ $ , ) ] ^ | && || }]
		[bitXorExpression -> * bitAndExpression ][ $ , ) ] ^ | && || }]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ $ , ) ] & ^ | && || }]
		[bitAndExpression -> * equalityExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression == shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression != shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 35:
	Contexts:
	Transitions:
		On bitXorExpression shift to 63
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[bitOrExpression -> bitOrExpression | * bitXorExpression ][ $ , ) ] | && || }]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ $ , ) ] ^ | && || }]
		[bitXorExpression -> * bitAndExpression ][ $ , ) ] ^ | && || }]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ $ , ) ] & ^ | && || }]
		[bitAndExpression -> * equalityExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression == shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression != shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 36:
	Contexts:
	Transitions:
		On bitAndExpression shift to 64
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[bitXorExpression -> bitXorExpression ^ * bitAndExpression ][ $ , ) ] ^ | && || }]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ $ , ) ] & ^ | && || }]
		[bitAndExpression -> * equalityExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression == shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression != shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 37:
	Contexts:
	Transitions:
		On equalityExpression shift to 65
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[bitAndExpression -> bitAndExpression & * equalityExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression == shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression != shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 38:
	Contexts:
	Transitions:
		On shiftExpression shift to 66
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression == * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 39:
	Contexts:
	Transitions:
		On shiftExpression shift to 67
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression != * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 40:
	Contexts:
	Transitions:
		On shiftExpression shift to 68
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression < * shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression < * shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression < * shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , ) ] - + shl shr <= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , ) ] - + shl shr <= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , ) ] - + shl shr <= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[name -> * identifier ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
	Conflicts:

State 41:
	Contexts:
	Transitions:
		On shiftExpression shift to 69
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression <= * shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression <= * shiftExpression <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression <= * shiftExpression < shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , ) ] - + shl shr <= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , ) ] - + shl shr <= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , ) ] - + shl shr <= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , ) ] - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[name -> * identifier ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , ( ) [ ] . - * / % mod + shl shr <= & ^ | && || }]
	Conflicts:

State 42:
	Contexts:
	Transitions:
		On shiftExpression shift to 70
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression > * shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression > * shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression > * shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , > ) ] - + shl shr >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , > ) ] - + shl shr >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , > ) ] - + shl shr >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[primaryExpression -> * name ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[name -> * identifier ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
	Conflicts:

State 43:
	Contexts:
	Transitions:
		On shiftExpression shift to 71
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression >= * shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression >= * shiftExpression >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression >= * shiftExpression > shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , > ) ] - + shl shr >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , > ) ] - + shl shr >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , > ) ] - + shl shr >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , > ) ] - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[primaryExpression -> * name ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[name -> * identifier ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , > ( ) [ ] . - * / % mod + shl shr >= & ^ | && || }]
	Conflicts:

State 44:
	Contexts:
	Transitions:
		On addExpression shift to 72
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[shiftExpression -> shiftExpression shl * addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 45:
	Contexts:
	Transitions:
		On addExpression shift to 73
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[shiftExpression -> shiftExpression shr * addExpression ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 46:
	Contexts:
	Transitions:
		On mulExpression shift to 74
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[addExpression -> addExpression + * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 47:
	Contexts:
	Transitions:
		On mulExpression shift to 75
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[addExpression -> addExpression - * mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 48:
	Contexts:
	Transitions:
		On unaryExpression shift to 76
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[mulExpression -> mulExpression * * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 49:
	Contexts:
	Transitions:
		On unaryExpression shift to 77
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[mulExpression -> mulExpression / * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 50:
	Contexts:
	Transitions:
		On unaryExpression shift to 78
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[mulExpression -> mulExpression % * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 51:
	Contexts:
	Transitions:
		On unaryExpression shift to 79
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[mulExpression -> mulExpression mod * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * literal ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[primaryExpression -> * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * numberLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[literal -> * boolLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 52:
	Contexts:
	Transitions:
		On ( shift to 54
		On [ shift to 55
		On . shift to 56
	Items:
		[unaryExpression -> - postfixExpression * ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 53:
	Contexts:
	Transitions:
		On ( shift to 54
		On [ shift to 55
		On . shift to 56
	Items:
		[unaryExpression -> ! postfixExpression * ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * ( sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * [ expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * . integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression * . name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 54:
	Contexts:
	Transitions:
		On sloppyList<expression, __T0001> shift to 80
		On expression shift to 81
		On withBlockExpression shift to 2
		On withoutBlockExpression shift to 3
		On { shift to 4
		On orExpression shift to 5
		On andExpression shift to 6
		On bitOrExpression shift to 7
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[postfixExpression -> postfixExpression ( * sloppyList<expression, __T0001> ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[sloppyList<expression, __T0001> -> * expression ][ )]
		[sloppyList<expression, __T0001> -> * expression , ][ )]
		[sloppyList<expression, __T0001> -> * expression __V58 ][ )]
		[sloppyList<expression, __T0001> -> * expression __V58 , ][ )]
		[sloppyList<expression, __T0001> -> * ][ )]
		[expression -> * withBlockExpression ][ , )]
		[expression -> * withoutBlockExpression ][ , )]
		[withBlockExpression -> * { expression } ][ , )]
		[withoutBlockExpression -> * orExpression ][ , )]
		[orExpression -> * orExpression || andExpression ][ , ) ||]
		[orExpression -> * andExpression ][ , ) ||]
		[andExpression -> * andExpression && bitOrExpression ][ , ) && ||]
		[andExpression -> * bitOrExpression ][ , ) && ||]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ , ) | && ||]
		[bitOrExpression -> * bitXorExpression ][ , ) | && ||]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ , ) ^ | && ||]
		[bitXorExpression -> * bitAndExpression ][ , ) ^ | && ||]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ , ) & ^ | && ||]
		[bitAndExpression -> * equalityExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression == shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression != shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression ][ , ) & ^ | && ||]
		[shiftExpression -> * shiftExpression shl addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * shiftExpression shr addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression + mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression - mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression * unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression / unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression % unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression mod unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * - postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * ! postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression [ expression ] ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . integerLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . name ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * primaryExpression ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * literal ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * ( expression ) ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * name ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * numberLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * boolLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier genericArgs ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * integerLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * floatLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[boolLiteral -> * BOOL_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[identifier -> * IDENTIFIER ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[integerLiteral -> * INTEGER_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[floatLiteral -> * FLOAT_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
	Conflicts:

State 55:
	Contexts:
	Transitions:
		On expression shift to 82
		On withBlockExpression shift to 2
		On withoutBlockExpression shift to 3
		On { shift to 4
		On orExpression shift to 5
		On andExpression shift to 6
		On bitOrExpression shift to 7
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[postfixExpression -> postfixExpression [ * expression ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[expression -> * withBlockExpression ][ ]]
		[expression -> * withoutBlockExpression ][ ]]
		[withBlockExpression -> * { expression } ][ ]]
		[withoutBlockExpression -> * orExpression ][ ]]
		[orExpression -> * orExpression || andExpression ][ ] ||]
		[orExpression -> * andExpression ][ ] ||]
		[andExpression -> * andExpression && bitOrExpression ][ ] && ||]
		[andExpression -> * bitOrExpression ][ ] && ||]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ ] | && ||]
		[bitOrExpression -> * bitXorExpression ][ ] | && ||]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ ] ^ | && ||]
		[bitXorExpression -> * bitAndExpression ][ ] ^ | && ||]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ ] & ^ | && ||]
		[bitAndExpression -> * equalityExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression == shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression != shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ ] & ^ | && ||]
		[equalityExpression -> * shiftExpression ][ ] & ^ | && ||]
		[shiftExpression -> * shiftExpression shl addExpression ][ < > ] shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * shiftExpression shr addExpression ][ < > ] shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * addExpression ][ < > ] shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression + mulExpression ][ < > ] - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression - mulExpression ][ < > ] - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * mulExpression ][ < > ] - + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression * unaryExpression ][ < > ] - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression / unaryExpression ][ < > ] - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression % unaryExpression ][ < > ] - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression mod unaryExpression ][ < > ] - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * unaryExpression ][ < > ] - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * - postfixExpression ][ < > ] - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * ! postfixExpression ][ < > ] - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * postfixExpression ][ < > ] - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression [ expression ] ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . integerLiteral ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . name ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * primaryExpression ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * literal ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * ( expression ) ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * name ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * numberLiteral ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * boolLiteral ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier genericArgs ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * integerLiteral ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * floatLiteral ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[boolLiteral -> * BOOL_LITERAL ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[identifier -> * IDENTIFIER ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[integerLiteral -> * INTEGER_LITERAL ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[floatLiteral -> * FLOAT_LITERAL ][ < > ( [ ] . - * / % mod + shl shr == != <= >= & ^ | && ||]
	Conflicts:

State 56:
	Contexts:
	Transitions:
		On integerLiteral shift to 83
		On name shift to 84
		On INTEGER_LITERAL shift to 29
		On identifier shift to 24
		On IDENTIFIER shift to 28
	Items:
		[postfixExpression -> postfixExpression . * integerLiteral ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[postfixExpression -> postfixExpression . * name ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[name -> * identifier genericArgs ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 57:
	Contexts:
	Transitions:
		On ) shift to 85
	Items:
		[primaryExpression -> ( expression * ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 58:
	Contexts:
	Transitions:
	Items:
		[name -> identifier genericArgs * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 59:
	Contexts:
	Transitions:
		On genericArgsTypes shift to 86
		On list<name, __T0001> shift to 87
		On name shift to 88
		On identifier shift to 24
		On IDENTIFIER shift to 28
	Items:
		[genericArgs -> < * genericArgsTypes > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgs -> < * genericArgsTypes , > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgs -> < * genericArgsTypes genericArgsBindings > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgsTypes -> * list<name, __T0001> ][ , >]
		[list<name, __T0001> -> * name ][ , >]
		[list<name, __T0001> -> * name __V15 ][ , >]
		[list<name, __T0001> -> * ][ , >]
		[name -> * identifier ][ , >]
		[name -> * identifier genericArgs ][ , >]
		[identifier -> * IDENTIFIER ][ < , >]
	Conflicts:
		Conflict ConflictReduceReduce on ,:
			Items:
				[genericArgsTypes -> * list<name, __T0001>]
				[list<name, __T0001> -> *]
			Examples:
				〖IDENTIFIER < ,〗
				〖{ IDENTIFIER < ,〗
				〖- IDENTIFIER < ,〗
				〖! IDENTIFIER < ,〗
				〖( IDENTIFIER < ,〗
				〖|| && | ^ & shl + * - ( ) == shl + * - ( ) || IDENTIFIER < ,〗
				〖&& | ^ & shl + * - ( ) == shl + * - ( ) && IDENTIFIER < ,〗
				〖| ^ & shl + * - ( ) == shl + * - ( ) | IDENTIFIER < ,〗
				〖^ & shl + * - ( ) == shl + * - ( ) ^ IDENTIFIER < ,〗
				〖& shl + * - ( ) == shl + * - ( ) & IDENTIFIER < ,〗
				〖shr shl + * - ( ) == IDENTIFIER < ,〗
				〖- + * - ( ) + IDENTIFIER < ,〗
				〖/ * - ( ) * IDENTIFIER < ,〗
				〖[ { } ] ( ) ( IDENTIFIER < ,〗
		Conflict ConflictReduceReduce on >:
			Items:
				[genericArgsTypes -> * list<name, __T0001>]
				[list<name, __T0001> -> *]
			Examples:
				〖IDENTIFIER < >〗
				〖{ IDENTIFIER < >〗
				〖- IDENTIFIER < >〗
				〖! IDENTIFIER < >〗
				〖( IDENTIFIER < >〗
				〖|| && | ^ & shl + * - ( ) == shl + * - ( ) || IDENTIFIER < >〗
				〖&& | ^ & shl + * - ( ) == shl + * - ( ) && IDENTIFIER < >〗
				〖| ^ & shl + * - ( ) == shl + * - ( ) | IDENTIFIER < >〗
				〖^ & shl + * - ( ) == shl + * - ( ) ^ IDENTIFIER < >〗
				〖& shl + * - ( ) == shl + * - ( ) & IDENTIFIER < >〗
				〖shr shl + * - ( ) == IDENTIFIER < >〗
				〖- + * - ( ) + IDENTIFIER < >〗
				〖/ * - ( ) * IDENTIFIER < >〗
				〖[ { } ] ( ) ( IDENTIFIER < >〗

State 60:
	Contexts:
	Transitions:
	Items:
		[withBlockExpression -> { expression } * ][ $ , ) ] }]
	Conflicts:

State 61:
	Contexts:
	Transitions:
		On && shift to 34
	Items:
		[orExpression -> orExpression || andExpression * ][ $ , ) ] || }]
		[andExpression -> andExpression * && bitOrExpression ][ $ , ) ] && || }]
	Conflicts:

State 62:
	Contexts:
	Transitions:
		On | shift to 35
	Items:
		[andExpression -> andExpression && bitOrExpression * ][ $ , ) ] && || }]
		[bitOrExpression -> bitOrExpression * | bitXorExpression ][ $ , ) ] | && || }]
	Conflicts:

State 63:
	Contexts:
	Transitions:
		On ^ shift to 36
	Items:
		[bitOrExpression -> bitOrExpression | bitXorExpression * ][ $ , ) ] | && || }]
		[bitXorExpression -> bitXorExpression * ^ bitAndExpression ][ $ , ) ] ^ | && || }]
	Conflicts:

State 64:
	Contexts:
	Transitions:
		On & shift to 37
	Items:
		[bitXorExpression -> bitXorExpression ^ bitAndExpression * ][ $ , ) ] ^ | && || }]
		[bitAndExpression -> bitAndExpression * & equalityExpression ][ $ , ) ] & ^ | && || }]
	Conflicts:

State 65:
	Contexts:
	Transitions:
	Items:
		[bitAndExpression -> bitAndExpression & equalityExpression * ][ $ , ) ] & ^ | && || }]
	Conflicts:

State 66:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression == shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 67:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression != shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 68:
	Contexts:
	Transitions:
		On <= shift to 89
		On < shift to 90
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression < shiftExpression * ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression < shiftExpression * <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression < shiftExpression * < shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
	Conflicts:

State 69:
	Contexts:
	Transitions:
		On <= shift to 91
		On < shift to 92
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression <= shiftExpression * ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression <= shiftExpression * <= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression <= shiftExpression * < shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ < , ) ] shl shr <= & ^ | && || }]
	Conflicts:

State 70:
	Contexts:
	Transitions:
		On >= shift to 93
		On > shift to 94
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression > shiftExpression * ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression > shiftExpression * >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression > shiftExpression * > shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
	Conflicts:

State 71:
	Contexts:
	Transitions:
		On >= shift to 95
		On > shift to 96
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression >= shiftExpression * ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression >= shiftExpression * >= shiftExpression ][ $ , ) ] & ^ | && || }]
		[equalityExpression -> shiftExpression >= shiftExpression * > shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , > ) ] shl shr >= & ^ | && || }]
	Conflicts:

State 72:
	Contexts:
	Transitions:
		On + shift to 46
		On - shift to 47
	Items:
		[shiftExpression -> shiftExpression shl addExpression * ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> addExpression * + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> addExpression * - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 73:
	Contexts:
	Transitions:
		On + shift to 46
		On - shift to 47
	Items:
		[shiftExpression -> shiftExpression shr addExpression * ][ $ < , > ) ] shl shr == != <= >= & ^ | && || }]
		[addExpression -> addExpression * + mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[addExpression -> addExpression * - mulExpression ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 74:
	Contexts:
	Transitions:
		On * shift to 48
		On / shift to 49
		On % shift to 50
		On mod shift to 51
	Items:
		[addExpression -> addExpression + mulExpression * ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 75:
	Contexts:
	Transitions:
		On * shift to 48
		On / shift to 49
		On % shift to 50
		On mod shift to 51
	Items:
		[addExpression -> addExpression - mulExpression * ][ $ < , > ) ] - + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * * unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * / unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * % unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
		[mulExpression -> mulExpression * mod unaryExpression ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 76:
	Contexts:
	Transitions:
	Items:
		[mulExpression -> mulExpression * unaryExpression * ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 77:
	Contexts:
	Transitions:
	Items:
		[mulExpression -> mulExpression / unaryExpression * ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 78:
	Contexts:
	Transitions:
	Items:
		[mulExpression -> mulExpression % unaryExpression * ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 79:
	Contexts:
	Transitions:
	Items:
		[mulExpression -> mulExpression mod unaryExpression * ][ $ < , > ) ] - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 80:
	Contexts:
	Transitions:
		On ) shift to 97
	Items:
		[postfixExpression -> postfixExpression ( sloppyList<expression, __T0001> * ) ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 81:
	Contexts:
	Transitions:
		On , shift to 98
		On __V58 shift to 99
	Items:
		[sloppyList<expression, __T0001> -> expression * ][ )]
		[sloppyList<expression, __T0001> -> expression * , ][ )]
		[sloppyList<expression, __T0001> -> expression * __V58 ][ )]
		[sloppyList<expression, __T0001> -> expression * __V58 , ][ )]
		[__V58 -> * , expression ][ , )]
		[__V58 -> * __V58 , expression ][ , )]
	Conflicts:

State 82:
	Contexts:
	Transitions:
		On ] shift to 100
	Items:
		[postfixExpression -> postfixExpression [ expression * ] ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 83:
	Contexts:
	Transitions:
	Items:
		[postfixExpression -> postfixExpression . integerLiteral * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 84:
	Contexts:
	Transitions:
	Items:
		[postfixExpression -> postfixExpression . name * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 85:
	Contexts:
	Transitions:
	Items:
		[primaryExpression -> ( expression ) * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 86:
	Contexts:
	Transitions:
		On > shift to 101
		On , shift to 102
		On genericArgsBindings shift to 103
	Items:
		[genericArgs -> < genericArgsTypes * > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgs -> < genericArgsTypes * , > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgs -> < genericArgsTypes * genericArgsBindings > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgsBindings -> * , list<genericArgsBinding, __T0001> ][ >]
	Conflicts:

State 87:
	Contexts:
	Transitions:
	Items:
		[genericArgsTypes -> list<name, __T0001> * ][ , >]
	Conflicts:

State 88:
	Contexts:
	Transitions:
		On __V15 shift to 104
		On , shift to 105
	Items:
		[list<name, __T0001> -> name * ][ , >]
		[list<name, __T0001> -> name * __V15 ][ , >]
		[__V15 -> * , name ][ , >]
		[__V15 -> * __V15 , name ][ , >]
	Conflicts:
		Conflict ConflictShiftReduce on ,:
			Items:
				[__V15 -> * , name]
				[list<name, __T0001> -> name *]
			Examples:
				〖IDENTIFIER < IDENTIFIER ,〗
				〖{ IDENTIFIER < IDENTIFIER ,〗
				〖- IDENTIFIER < IDENTIFIER ,〗
				〖! IDENTIFIER < IDENTIFIER ,〗
				〖( IDENTIFIER < IDENTIFIER ,〗
				〖|| && | ^ & shl + * - ( ) == shl + * - ( ) || IDENTIFIER < IDENTIFIER ,〗
				〖&& | ^ & shl + * - ( ) == shl + * - ( ) && IDENTIFIER < IDENTIFIER ,〗
				〖| ^ & shl + * - ( ) == shl + * - ( ) | IDENTIFIER < IDENTIFIER ,〗
				〖^ & shl + * - ( ) == shl + * - ( ) ^ IDENTIFIER < IDENTIFIER ,〗
				〖& shl + * - ( ) == shl + * - ( ) & IDENTIFIER < IDENTIFIER ,〗
				〖shr shl + * - ( ) == IDENTIFIER < IDENTIFIER ,〗
				〖- + * - ( ) + IDENTIFIER < IDENTIFIER ,〗
				〖/ * - ( ) * IDENTIFIER < IDENTIFIER ,〗
				〖[ { } ] ( ) ( IDENTIFIER < IDENTIFIER ,〗

State 89:
	Contexts:
	Transitions:
		On shiftExpression shift to 106
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression < shiftExpression <= * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 90:
	Contexts:
	Transitions:
		On shiftExpression shift to 107
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression < shiftExpression < * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 91:
	Contexts:
	Transitions:
		On shiftExpression shift to 108
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression <= shiftExpression <= * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 92:
	Contexts:
	Transitions:
		On shiftExpression shift to 109
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression <= shiftExpression < * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 93:
	Contexts:
	Transitions:
		On shiftExpression shift to 110
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression > shiftExpression >= * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 94:
	Contexts:
	Transitions:
		On shiftExpression shift to 111
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression > shiftExpression > * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 95:
	Contexts:
	Transitions:
		On shiftExpression shift to 112
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression >= shiftExpression >= * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 96:
	Contexts:
	Transitions:
		On shiftExpression shift to 113
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[equalityExpression -> shiftExpression >= shiftExpression > * shiftExpression ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> * shiftExpression shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * shiftExpression shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> * addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[addExpression -> * addExpression + mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * addExpression - mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[addExpression -> * mulExpression ][ $ , ) ] - + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression / unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression % unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * mulExpression mod unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[mulExpression -> * unaryExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * - postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * ! postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[unaryExpression -> * postfixExpression ][ $ , ) ] - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression [ expression ] ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * postfixExpression . name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[postfixExpression -> * primaryExpression ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * literal ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * ( expression ) ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[primaryExpression -> * name ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * numberLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[literal -> * boolLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[name -> * identifier genericArgs ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * integerLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[numberLiteral -> * floatLiteral ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[boolLiteral -> * BOOL_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[identifier -> * IDENTIFIER ][ $ < , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[integerLiteral -> * INTEGER_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
		[floatLiteral -> * FLOAT_LITERAL ][ $ , ( ) [ ] . - * / % mod + shl shr & ^ | && || }]
	Conflicts:

State 97:
	Contexts:
	Transitions:
	Items:
		[postfixExpression -> postfixExpression ( sloppyList<expression, __T0001> ) * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 98:
	Contexts:
	Transitions:
		On expression shift to 114
		On withBlockExpression shift to 2
		On withoutBlockExpression shift to 3
		On { shift to 4
		On orExpression shift to 5
		On andExpression shift to 6
		On bitOrExpression shift to 7
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[sloppyList<expression, __T0001> -> expression , * ][ )]
		[__V58 -> , * expression ][ , )]
		[expression -> * withBlockExpression ][ , )]
		[expression -> * withoutBlockExpression ][ , )]
		[withBlockExpression -> * { expression } ][ , )]
		[withoutBlockExpression -> * orExpression ][ , )]
		[orExpression -> * orExpression || andExpression ][ , ) ||]
		[orExpression -> * andExpression ][ , ) ||]
		[andExpression -> * andExpression && bitOrExpression ][ , ) && ||]
		[andExpression -> * bitOrExpression ][ , ) && ||]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ , ) | && ||]
		[bitOrExpression -> * bitXorExpression ][ , ) | && ||]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ , ) ^ | && ||]
		[bitXorExpression -> * bitAndExpression ][ , ) ^ | && ||]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ , ) & ^ | && ||]
		[bitAndExpression -> * equalityExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression == shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression != shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression ][ , ) & ^ | && ||]
		[shiftExpression -> * shiftExpression shl addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * shiftExpression shr addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression + mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression - mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression * unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression / unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression % unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression mod unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * - postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * ! postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression [ expression ] ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . integerLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . name ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * primaryExpression ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * literal ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * ( expression ) ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * name ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * numberLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * boolLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier genericArgs ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * integerLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * floatLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[boolLiteral -> * BOOL_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[identifier -> * IDENTIFIER ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[integerLiteral -> * INTEGER_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[floatLiteral -> * FLOAT_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
	Conflicts:

State 99:
	Contexts:
	Transitions:
		On , shift to 115
	Items:
		[sloppyList<expression, __T0001> -> expression __V58 * ][ )]
		[sloppyList<expression, __T0001> -> expression __V58 * , ][ )]
		[__V58 -> __V58 * , expression ][ , )]
	Conflicts:

State 100:
	Contexts:
	Transitions:
	Items:
		[postfixExpression -> postfixExpression [ expression ] * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 101:
	Contexts:
	Transitions:
	Items:
		[genericArgs -> < genericArgsTypes > * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 102:
	Contexts:
	Transitions:
		On > shift to 116
		On list<genericArgsBinding, __T0001> shift to 117
		On genericArgsBinding shift to 118
		On identifier shift to 119
		On IDENTIFIER shift to 28
	Items:
		[genericArgs -> < genericArgsTypes , * > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
		[genericArgsBindings -> , * list<genericArgsBinding, __T0001> ][ >]
		[list<genericArgsBinding, __T0001> -> * genericArgsBinding ][ >]
		[list<genericArgsBinding, __T0001> -> * genericArgsBinding __V17 ][ >]
		[list<genericArgsBinding, __T0001> -> * ][ >]
		[genericArgsBinding -> * identifier = type ][ , >]
		[identifier -> * IDENTIFIER ][ =]
	Conflicts:
		Conflict ConflictShiftReduce on >:
			Items:
				[genericArgs -> < genericArgsTypes , * >]
				[genericArgsBindings -> , * list<genericArgsBinding, __T0001>]
				[list<genericArgsBinding, __T0001> -> *]
			Examples:
				〖IDENTIFIER < , >〗
				〖{ IDENTIFIER < , >〗
				〖- IDENTIFIER < , >〗
				〖! IDENTIFIER < , >〗
				〖( IDENTIFIER < , >〗
				〖|| && | ^ & shl + * - ( ) == shl + * - ( ) || IDENTIFIER < , >〗
				〖&& | ^ & shl + * - ( ) == shl + * - ( ) && IDENTIFIER < , >〗
				〖| ^ & shl + * - ( ) == shl + * - ( ) | IDENTIFIER < , >〗
				〖^ & shl + * - ( ) == shl + * - ( ) ^ IDENTIFIER < , >〗
				〖& shl + * - ( ) == shl + * - ( ) & IDENTIFIER < , >〗
				〖shr shl + * - ( ) == IDENTIFIER < , >〗
				〖- + * - ( ) + IDENTIFIER < , >〗
				〖/ * - ( ) * IDENTIFIER < , >〗
				〖[ { } ] ( ) ( IDENTIFIER < , >〗

State 103:
	Contexts:
	Transitions:
		On > shift to 120
	Items:
		[genericArgs -> < genericArgsTypes genericArgsBindings * > ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 104:
	Contexts:
	Transitions:
		On , shift to 121
	Items:
		[list<name, __T0001> -> name __V15 * ][ , >]
		[__V15 -> __V15 * , name ][ , >]
	Conflicts:
		Conflict ConflictShiftReduce on ,:
			Items:
				[__V15 -> __V15 * , name]
				[list<name, __T0001> -> name __V15 *]
			Examples:
				〖IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖{ IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖- IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖! IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖( IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖|| && | ^ & shl + * - ( ) == shl + * - ( ) || IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖&& | ^ & shl + * - ( ) == shl + * - ( ) && IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖| ^ & shl + * - ( ) == shl + * - ( ) | IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖^ & shl + * - ( ) == shl + * - ( ) ^ IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖& shl + * - ( ) == shl + * - ( ) & IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖shr shl + * - ( ) == IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖- + * - ( ) + IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖/ * - ( ) * IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗
				〖[ { } ] ( ) ( IDENTIFIER < IDENTIFIER , IDENTIFIER ,〗

State 105:
	Contexts:
	Transitions:
		On name shift to 122
		On identifier shift to 24
		On IDENTIFIER shift to 28
	Items:
		[__V15 -> , * name ][ , >]
		[name -> * identifier ][ , >]
		[name -> * identifier genericArgs ][ , >]
		[identifier -> * IDENTIFIER ][ < , >]
	Conflicts:

State 106:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression < shiftExpression <= shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 107:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression < shiftExpression < shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 108:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression <= shiftExpression <= shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 109:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression <= shiftExpression < shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 110:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression > shiftExpression >= shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 111:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression > shiftExpression > shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 112:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression >= shiftExpression >= shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 113:
	Contexts:
	Transitions:
		On shl shift to 44
		On shr shift to 45
	Items:
		[equalityExpression -> shiftExpression >= shiftExpression > shiftExpression * ][ $ , ) ] & ^ | && || }]
		[shiftExpression -> shiftExpression * shl addExpression ][ $ , ) ] shl shr & ^ | && || }]
		[shiftExpression -> shiftExpression * shr addExpression ][ $ , ) ] shl shr & ^ | && || }]
	Conflicts:

State 114:
	Contexts:
	Transitions:
	Items:
		[__V58 -> , expression * ][ , )]
	Conflicts:

State 115:
	Contexts:
	Transitions:
		On expression shift to 123
		On withBlockExpression shift to 2
		On withoutBlockExpression shift to 3
		On { shift to 4
		On orExpression shift to 5
		On andExpression shift to 6
		On bitOrExpression shift to 7
		On bitXorExpression shift to 8
		On bitAndExpression shift to 9
		On equalityExpression shift to 10
		On shiftExpression shift to 11
		On addExpression shift to 12
		On mulExpression shift to 13
		On unaryExpression shift to 14
		On - shift to 15
		On ! shift to 16
		On postfixExpression shift to 17
		On primaryExpression shift to 18
		On literal shift to 19
		On ( shift to 20
		On name shift to 21
		On numberLiteral shift to 22
		On boolLiteral shift to 23
		On identifier shift to 24
		On integerLiteral shift to 25
		On floatLiteral shift to 26
		On BOOL_LITERAL shift to 27
		On IDENTIFIER shift to 28
		On INTEGER_LITERAL shift to 29
		On FLOAT_LITERAL shift to 30
	Items:
		[sloppyList<expression, __T0001> -> expression __V58 , * ][ )]
		[__V58 -> __V58 , * expression ][ , )]
		[expression -> * withBlockExpression ][ , )]
		[expression -> * withoutBlockExpression ][ , )]
		[withBlockExpression -> * { expression } ][ , )]
		[withoutBlockExpression -> * orExpression ][ , )]
		[orExpression -> * orExpression || andExpression ][ , ) ||]
		[orExpression -> * andExpression ][ , ) ||]
		[andExpression -> * andExpression && bitOrExpression ][ , ) && ||]
		[andExpression -> * bitOrExpression ][ , ) && ||]
		[bitOrExpression -> * bitOrExpression | bitXorExpression ][ , ) | && ||]
		[bitOrExpression -> * bitXorExpression ][ , ) | && ||]
		[bitXorExpression -> * bitXorExpression ^ bitAndExpression ][ , ) ^ | && ||]
		[bitXorExpression -> * bitAndExpression ][ , ) ^ | && ||]
		[bitAndExpression -> * bitAndExpression & equalityExpression ][ , ) & ^ | && ||]
		[bitAndExpression -> * equalityExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression == shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression != shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression < shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression <= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression <= shiftExpression < shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression > shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression >= shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression >= shiftExpression > shiftExpression ][ , ) & ^ | && ||]
		[equalityExpression -> * shiftExpression ][ , ) & ^ | && ||]
		[shiftExpression -> * shiftExpression shl addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * shiftExpression shr addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[shiftExpression -> * addExpression ][ < , > ) shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression + mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * addExpression - mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[addExpression -> * mulExpression ][ < , > ) - + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression * unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression / unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression % unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * mulExpression mod unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[mulExpression -> * unaryExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * - postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * ! postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[unaryExpression -> * postfixExpression ][ < , > ) - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression ( sloppyList<expression, __T0001> ) ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression [ expression ] ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . integerLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * postfixExpression . name ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[postfixExpression -> * primaryExpression ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * literal ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * ( expression ) ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[primaryExpression -> * name ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * numberLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[literal -> * boolLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[name -> * identifier genericArgs ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * integerLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[numberLiteral -> * floatLiteral ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[boolLiteral -> * BOOL_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[identifier -> * IDENTIFIER ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[integerLiteral -> * INTEGER_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
		[floatLiteral -> * FLOAT_LITERAL ][ < , > ( ) [ . - * / % mod + shl shr == != <= >= & ^ | && ||]
	Conflicts:

State 116:
	Contexts:
	Transitions:
	Items:
		[genericArgs -> < genericArgsTypes , > * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 117:
	Contexts:
	Transitions:
	Items:
		[genericArgsBindings -> , list<genericArgsBinding, __T0001> * ][ >]
	Conflicts:

State 118:
	Contexts:
	Transitions:
		On __V17 shift to 124
		On , shift to 125
	Items:
		[list<genericArgsBinding, __T0001> -> genericArgsBinding * ][ >]
		[list<genericArgsBinding, __T0001> -> genericArgsBinding * __V17 ][ >]
		[__V17 -> * , genericArgsBinding ][ , >]
		[__V17 -> * __V17 , genericArgsBinding ][ , >]
	Conflicts:

State 119:
	Contexts:
	Transitions:
		On = shift to 126
	Items:
		[genericArgsBinding -> identifier * = type ][ , >]
	Conflicts:

State 120:
	Contexts:
	Transitions:
	Items:
		[genericArgs -> < genericArgsTypes genericArgsBindings > * ][ $ < , > ( ) [ ] . - * / % mod + shl shr == != <= >= & ^ | && || }]
	Conflicts:

State 121:
	Contexts:
	Transitions:
		On name shift to 127
		On identifier shift to 24
		On IDENTIFIER shift to 28
	Items:
		[__V15 -> __V15 , * name ][ , >]
		[name -> * identifier ][ , >]
		[name -> * identifier genericArgs ][ , >]
		[identifier -> * IDENTIFIER ][ < , >]
	Conflicts:

State 122:
	Contexts:
	Transitions:
	Items:
		[__V15 -> , name * ][ , >]
	Conflicts:

State 123:
	Contexts:
	Transitions:
	Items:
		[__V58 -> __V58 , expression * ][ , )]
	Conflicts:

State 124:
	Contexts:
	Transitions:
		On , shift to 128
	Items:
		[list<genericArgsBinding, __T0001> -> genericArgsBinding __V17 * ][ >]
		[__V17 -> __V17 * , genericArgsBinding ][ , >]
	Conflicts:

State 125:
	Contexts:
	Transitions:
		On genericArgsBinding shift to 129
		On identifier shift to 119
		On IDENTIFIER shift to 28
	Items:
		[__V17 -> , * genericArgsBinding ][ , >]
		[genericArgsBinding -> * identifier = type ][ , >]
		[identifier -> * IDENTIFIER ][ =]
	Conflicts:

State 126:
	Contexts:
	Transitions:
		On type shift to 130
		On IDENTIFIER shift to 131
	Items:
		[genericArgsBinding -> identifier = * type ][ , >]
		[type -> * IDENTIFIER ][ , >]
	Conflicts:

State 127:
	Contexts:
	Transitions:
	Items:
		[__V15 -> __V15 , name * ][ , >]
	Conflicts:

State 128:
	Contexts:
	Transitions:
		On genericArgsBinding shift to 132
		On identifier shift to 119
		On IDENTIFIER shift to 28
	Items:
		[__V17 -> __V17 , * genericArgsBinding ][ , >]
		[genericArgsBinding -> * identifier = type ][ , >]
		[identifier -> * IDENTIFIER ][ =]
	Conflicts:

State 129:
	Contexts:
	Transitions:
	Items:
		[__V17 -> , genericArgsBinding * ][ , >]
	Conflicts:

State 130:
	Contexts:
	Transitions:
	Items:
		[genericArgsBinding -> identifier = type * ][ , >]
	Conflicts:

State 131:
	Contexts:
	Transitions:
	Items:
		[type -> IDENTIFIER * ][ , >]
	Conflicts:

State 132:
	Contexts:
	Transitions:
	Items:
		[__V17 -> __V17 , genericArgsBinding * ][ , >]
	Conflicts:
