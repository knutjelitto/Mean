grammar Mean 
    : MeanSpacing
    , MeanGenerics
    , MeanExpression
{
    options
    {
        Axiom       = "unit"; // the top variable for this grammar
        Separator   = "SEPARATOR";  // the terminal that represent white space

        CompilationMode = "Debug";
        //ParserType = "LR";
        ParserType = "RNGLR";
        Runtime = "Net";
        Namespace = "Mean.Language.Generated";
        AccessModifier = "Public";
    }
    
    terminals { }
  
    rules
    {
        unit
            -> unitItem*
            ;

        unitItem
            -> namespace^
            ;

        namespace
            -> 'namespace'! identifier '{'! namespaceItems '}'!
            ;

        namespaceItems
            -> namespaceItem*
            ;

        namespaceItem
            -> namespace^
            |  definedFunction^
            |  trait^
            ;

        definedFunction
            -> 'function' functionKernel '{' maybeFunctionItems '}'
            ;

        declaredFunction
            -> 'function' functionKernel ';'
            ;

        definedMethod
            -> 'method' functionKernel '{' maybeFunctionItems '}'
            ;

        declaredMethod
            -> 'method' functionKernel ';'
            ;

        functionKernel
            -> identifier maybeGenericParameters maybeWhere '(' maybeFunParameters ')' maybeTypeAnnotation
            ;

        maybeFunParameters
            -> maybeFunParameters funParameter
            | funParameter
            |
            ;

        funParameter
            -> identifier typeAnnotation
            ;

        maybeFunctionItems
            -> maybeFunctionItems functionItem
            |  functionItem
            |
            ;

        functionItem
            -> definedFunction^
            |  trait^
            |  typeAlias^
            ;

        typeAlias
            -> 'type' identifier '=' type ';'
            ;

        trait
            -> 'trait'! identifier maybeGenericParameters maybeWhere '{'! maybeTraitItems '}'!
            ;

        maybeTraitItems
            -> traitItem*
            ;

        traitItem
            -> definedFunction
            |  declaredFunction
            |  definedMethod
            |  declaredMethod
            |  traitOutputType
            ;

        traitOutputType
            -> 'type' identifier maybeWhere maybeTypeAnnotation ';'
            ;

        maybeTypeAnnotation
            -> typeAnnotation
            |
            ;

        typeAnnotation
            -> ':' type
            ;

        maybeGenericParameters
            -> genericParameters?
            ;

        genericParameters
            -> '<'! genericNames ','! genericDefaults '>'!
            |  '<'! genericNames '>'!
            |  '<'! genericDefaults '>'
            ;

        genericNames
            -> genericName (','! genericName)*
            ;

        genericName
            -> identifier
            ;

        genericDefaults
            -> genericDefault (','! genericDefaults)*
            ;

        genericDefault
            -> identifier '=' type
            ;

        maybeWhere
            -> where?
            ;

        where
            -> 'where'
            ;
    }
}

grammar MeanGenerics
    : MeanType
    , MeanTools

{
    options {}
    terminals {}

    rules
    {
    }
}
